{
  "name": "Get Transportation Info",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "query"
            }
          ]
        }
      },
      "id": "e1e2db83-7712-4922-abbe-3f7319cab6a4",
      "typeVersion": 1.1,
      "name": "When Executed by Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        176,
        -128
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "=You are an AI agent in an n8n workflow tasked with retrieving and summarizing transportation information using the Get-Transportation-Info tool, which interfaces with the Google Maps Routes API. The user provides:\n\n- origin: Starting address (e.g., \"Central MTR Station, Hong Kong\").\n- destination: Destination address (e.g., \"Tsim Sha Tsui Star Ferry Pier, Hong Kong\").\n- travelMode: Transportation mode (\"WALK\", \"TRANSIT\", \"DRIVE\", or \"BICYCLE\"). Default to \"TRANSIT\" if not provided or invalid.\n- departureTime: Departure time in RFC 3339 format (e.g., \"2025-09-29T16:30:00+08:00\"). Optional; if omitted, use current time (04:07 PM HKT, Sep 29, 2025).\n\nYour task:\n\n1. Validate inputs:\nEnsure origin and destination are non-empty strings.\nVerify travelMode is one of [\"WALK\", \"TRANSIT\", \"DRIVE\", \"BICYCLE\"]. If empty or invalid, set to \"TRANSIT\".\nIf departureTime is provided, ensure itâ€™s valid RFC 3339. If departureTime is not provided, use a valid RFC 3339 time. If anything invalid, return an error.\n\n2. Call the Get-Transportation-Info tool with the inputs. When you call the tool, pass in the request body in the following format:\n```\n{\n    \"origin\": {\n        \"address\": <origin location>\n    }, \n    \"destination\": {\n        \"address\": <destination location>\n    }, \n    \"travelMode\": <travelMode: \"TRANSIT\" (default), \"WALK\", \"DRIVE\", \"BICYCLE\">,\n    \"departureTime\": <departureTime in RFC 3339 format>\n}\n```\nAn example input:\n```\n{\n    \"origin\": {\n        \"address\": \"CUHK, Hong Kong\"\n    }, \n    \"destination\": {\n        \"address\": \"UST, Hong Kong\"\n    }, \n    \"travelMode\": \"TRANSIT\",\n    \"departureTime\": \"2025-09-29T16:00:00+08:00\"\n}\n```\n\n3. Summarize the response in plain text, including:\nTotal distance in kilometers (rounded to 1 decimal place).\nEstimated duration in minutes (rounded to nearest minute).\nRoute description (if available, e.g., \"Via Des Voeux Rd Central\").\nUp to three key steps (e.g., for walking: navigation instructions like \"Turn right onto Nathan Rd\"; for transit: details like \"Take MTR Tsuen Wan Line for 3 stops\").\n\n4. Handle errors gracefully, returning a clear error message (e.g., \"Error: Invalid departure time format\" or \"Error: No routes found\").\n\n\n\n"
        }
      },
      "id": "fcc87eab-c1eb-48b3-91c0-a4caddc59c30",
      "name": "Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        400,
        -128
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        368,
        112
      ],
      "id": "d3f4addb-d205-4b82-b5df-4488eea00ece",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "CHwRoEqp9IEPT54g",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Get Hong Kong Transportation Info",
        "method": "POST",
        "url": "https://routes.googleapis.com/directions/v2:computeRoutes",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Goog-Api-Key",
              "value": ""
            },
            {
              "name": "X-Goog-FieldMask",
              "value": "routes.duration,routes.description,routes.legs.steps.transitDetails"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('JSON', ``, 'json') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        560,
        112
      ],
      "id": "4ae36374-57fb-41ec-8ccc-f102b755a9d5",
      "name": "Get-Transportation-Info"
    }
  ],
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "query": "Sept 30"
        }
      }
    ]
  },
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get-Transportation-Info": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "88aafa0e-f0af-4d93-99e6-078935158b58",
  "meta": {
    "instanceId": "47827cfb2f0fd42cf7d65f80c15f5a25826677d9389942bc8cab5ca0b3c9777d"
  },
  "id": "HCqLP9tu4jKRiOTq",
  "tags": []
}